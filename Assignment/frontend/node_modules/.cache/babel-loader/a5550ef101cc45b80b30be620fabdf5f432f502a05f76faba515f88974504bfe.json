{"ast":null,"code":"var _jsxFileName = \"/Users/harsh/Desktop/harshb/Projects_SE/web_dev/Assignment/frontend/src/components/Jobs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Placeholder from 'react-bootstrap/Placeholder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Jobs() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [load, setLoad] = useState(false);\n  const getJobs = async () => {\n    try {\n      setLoad(true);\n      const res = await fetch(\"/jobs\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (res.status === 200) {\n        const data = await res.json();\n        setJobs(data);\n        setLoad(false);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    getJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"25px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        height: \"200px\",\n        overflowY: \"scroll\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"NEW JOBS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        style: {\n          overflowY: \"scroll\"\n        },\n        children: load === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Placeholder, {\n            xs: 6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n            className: \"w-75\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Placeholder, {\n            style: {\n              width: '25%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true) : jobs.length > 0 ? jobs.slice(0, 2).map(job => /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '18rem',\n            marginBottom: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: job.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: [\"Location: \", job.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Skills: \", job.skills]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n              style: {\n                color: 'inherit',\n                textDecoration: 'none'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Mode:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 93\n              }, this), \" \", job.mode]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n              style: {\n                color: 'inherit',\n                textDecoration: 'none'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"CTC:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 93\n              }, this), \" \", job.ctc, \" p.a.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Jobs, \"pDsr66z7o/EnFZY/ursLOb0a0JA=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useState","useEffect","Card","ListGroup","Placeholder","jsxDEV","_jsxDEV","Fragment","_Fragment","Jobs","_s","jobs","setJobs","load","setLoad","getJobs","res","fetch","method","headers","status","data","json","error","console","style","marginTop","children","height","overflowY","Header","fileName","_jsxFileName","lineNumber","columnNumber","Body","xs","className","width","length","slice","map","job","marginBottom","Title","name","Subtitle","location","Text","skills","Link","color","textDecoration","mode","ctc","_c","$RefreshReg$"],"sources":["/Users/harsh/Desktop/harshb/Projects_SE/web_dev/Assignment/frontend/src/components/Jobs.jsx"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Placeholder from 'react-bootstrap/Placeholder';\n\nfunction Jobs(){\n    const [jobs,setJobs]=useState([]);\n    const [load,setLoad]=useState(false);\n    const getJobs=async()=>{\n        try{\n            setLoad(true);\n            const res=await fetch(\"/jobs\",{\n                method:\"GET\",\n                headers:{\n                    \"Content-Type\":\"application/json\"\n                }\n            });\n            if(res.status===200){\n                const data=await res.json();\n                setJobs(data);\n                setLoad(false);\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    useEffect(()=>{\n        getJobs();\n      },[]);\n    return(\n        <div style={{marginTop:\"25px\"}}>\n        <Card style={{height:\"200px\", overflowY:\"scroll\"}}>\n        <Card.Header>NEW JOBS</Card.Header>\n        <Card.Body style={{overflowY:\"scroll\"}}>\n            {load===true?(\n                <>\n                <Placeholder xs={6} />\n                <Placeholder className=\"w-75\" /> <Placeholder style={{ width: '25%' }} />\n                </>\n            ):(\n                (jobs.length>0)?(jobs.slice(0,2).map(job=>\n                    <Card style={{ width: '18rem',marginBottom:\"10px\" }}>\n                        <Card.Body>\n                            <Card.Title>{job.name}</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">Location: {job.location}</Card.Subtitle>\n                            <Card.Text>\n                            Skills: {job.skills}\n                            </Card.Text>\n                            <Card.Link style={{ color: 'inherit', textDecoration: 'none' }}><b>Mode:</b> {job.mode}</Card.Link>\n                            <Card.Link style={{ color: 'inherit', textDecoration: 'none' }}><b>CTC:</b> {job.ctc} p.a.</Card.Link>\n                        </Card.Body>\n                    </Card>\n                )):(<></>)\n            )}\n        \n        </Card.Body>\n        </Card>\n        \n        </div>\n    )\n}\nexport default Jobs;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}