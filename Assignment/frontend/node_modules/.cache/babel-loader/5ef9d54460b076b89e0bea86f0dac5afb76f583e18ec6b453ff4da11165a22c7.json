{"ast":null,"code":"var _jsxFileName = \"/Users/harsh/Desktop/harshb/Projects_SE/web_dev/Assignment/frontend/src/components/Events.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Placeholder from 'react-bootstrap/Placeholder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Events() {\n  _s();\n  const [event, setEvent] = useState({});\n  const [load, setLoad] = useState(false);\n  const getEvents = async () => {\n    try {\n      setLoad(true);\n      const res = await fetch(\"/events\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (res.status === 200) {\n        const data = await res.json();\n        // console.log(data[0]);\n        setEvent(data);\n        setLoad(false);\n        console.log(data);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    getEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"25px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        height: \"200px\",\n        overflowY: \"scroll\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"LATEST EVENTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        style: {\n          overflowY: \"scroll\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Events, \"5KXdUKTMjC+JHzlAC48kh4IjRLY=\");\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useState","useEffect","Card","ListGroup","Placeholder","jsxDEV","_jsxDEV","Events","_s","event","setEvent","load","setLoad","getEvents","res","fetch","method","headers","status","data","json","console","log","error","style","marginTop","children","height","overflowY","Header","fileName","_jsxFileName","lineNumber","columnNumber","Body","_c","$RefreshReg$"],"sources":["/Users/harsh/Desktop/harshb/Projects_SE/web_dev/Assignment/frontend/src/components/Events.jsx"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Placeholder from 'react-bootstrap/Placeholder';\n\nfunction Events(){\n    const [event,setEvent]=useState({});\n    const [load,setLoad]=useState(false);\n    const getEvents=async()=>{\n        try{\n            setLoad(true);\n            const res=await fetch(\"/events\",{\n                method:\"GET\",\n                headers:{\n                    \"Content-Type\":\"application/json\"\n                }\n            });\n            if(res.status===200){\n                const data=await res.json();\n                // console.log(data[0]);\n                setEvent(data);\n                setLoad(false);\n                console.log(data);\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    useEffect(()=>{\n        getEvents();\n      },[]);\n    return(\n        <div style={{marginTop:\"25px\"}}>\n        <Card style={{height:\"200px\", overflowY:\"scroll\"}}>\n        <Card.Header>LATEST EVENTS</Card.Header>\n        <Card.Body style={{overflowY:\"scroll\"}}>\n            {/* {load===true?(\n                <>\n                <Placeholder xs={6} />\n                <Placeholder className=\"w-75\" /> <Placeholder style={{ width: '25%' }} />\n                </>\n            ):(\n                (event.length>0)?(event.slice(0,5).map(n=>\n                    <Card style={{ width: '18rem',marginBottom:\"10px\" }}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item><a href={n.url}>{n.name}</a></ListGroup.Item>\n                        <ListGroup.Item>{n.description}</ListGroup.Item>\n                    </ListGroup>\n                    </Card>\n                )):(<></>)\n            )} */}\n        \n        </Card.Body>\n        </Card>\n        \n        </div>\n    )\n}\nexport default Events;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,WAAW,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,MAAMA,CAAA,EAAE;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACV,QAAQ,CAAC,CAAC,CAAC,CAAC;EACnC,MAAM,CAACW,IAAI,EAACC,OAAO,CAAC,GAACZ,QAAQ,CAAC,KAAK,CAAC;EACpC,MAAMa,SAAS,GAAC,MAAAA,CAAA,KAAS;IACrB,IAAG;MACCD,OAAO,CAAC,IAAI,CAAC;MACb,MAAME,GAAG,GAAC,MAAMC,KAAK,CAAC,SAAS,EAAC;QAC5BC,MAAM,EAAC,KAAK;QACZC,OAAO,EAAC;UACJ,cAAc,EAAC;QACnB;MACJ,CAAC,CAAC;MACF,IAAGH,GAAG,CAACI,MAAM,KAAG,GAAG,EAAC;QAChB,MAAMC,IAAI,GAAC,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;QAC3B;QACAV,QAAQ,CAACS,IAAI,CAAC;QACdP,OAAO,CAAC,KAAK,CAAC;QACdS,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACrB;IACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EACDtB,SAAS,CAAC,MAAI;IACVY,SAAS,CAAC,CAAC;EACb,CAAC,EAAC,EAAE,CAAC;EACP,oBACIP,OAAA;IAAKkB,KAAK,EAAE;MAACC,SAAS,EAAC;IAAM,CAAE;IAAAC,QAAA,eAC/BpB,OAAA,CAACJ,IAAI;MAACsB,KAAK,EAAE;QAACG,MAAM,EAAC,OAAO;QAAEC,SAAS,EAAC;MAAQ,CAAE;MAAAF,QAAA,gBAClDpB,OAAA,CAACJ,IAAI,CAAC2B,MAAM;QAAAH,QAAA,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACxC3B,OAAA,CAACJ,IAAI,CAACgC,IAAI;QAACV,KAAK,EAAE;UAACI,SAAS,EAAC;QAAQ;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiB5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAEd;AAACzB,EAAA,CApDQD,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AAqDf,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}